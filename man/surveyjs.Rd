% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/surveyjs.R
\name{surveyjs}
\alias{surveyjs}
\title{SurveyJS widget for Shiny with support for JavaScript hooks}
\usage{
surveyjs(
  schema,
  data = NULL,
  read_only = FALSE,
  live = FALSE,
  theme = "DefaultLight",
  theme_vars = NULL,
  locale = NULL,
  pre_render_hook = NULL,
  post_render_hook = NULL,
  complete_hook = NULL,
  width = NULL,
  height = NULL,
  element_id = NULL
)
}
\arguments{
\item{schema}{List or JSON string; must follow
\href{https://surveyjs.io/form-library/documentation/json-schema}{SurveyJS JSON Schema}.}

\item{data}{Initial values.}

\item{read_only}{Render in read-only mode.}

\item{live}{Live update responses?}

\item{theme}{Theme name.}

\item{theme_vars}{Named list of CSS variables (e.g. \code{--sjs-primary-backcolor}).}

\item{locale}{Language code (e.g. \code{"en"}, \code{"de"})}

\item{pre_render_hook}{JavaScript code (as a string) to run before rendering the survey.
Supply only the body of a JavaScript function — do not wrap it in \code{function(...) {}}.}

\item{post_render_hook}{JavaScript code (as a string) to run after the survey is rendered.
Also supply only the body of a JavaScript function — not a full \code{function(...) {}} wrapper.}

\item{complete_hook}{JavaScript function body to run on survey completion}

\item{width, height}{Optional CSS size or number.}

\item{element_id}{Optional element ID. Leave NULL in Shiny (it's auto-assigned).}
}
\description{
Render a \href{https://surveyjs.io/}{SurveyJS} form from a JSON schema.
}
\details{
This widget renders a fully customizable survey using SurveyJS v2 inside a Shiny app.
It supports themes, read-only mode, initial values, localization, and real-time updates.

Final answers are delivered to \code{input[[paste0(id, "_data")]]} after the user
clicks \strong{Complete}. If \code{live = TRUE}, updates are delivered to
\code{input[[paste0(id, "_data_live")]]} during input.

The SurveyJS widget is responsive by default. The \code{resize()} method is a placeholder
and does not implement manual resizing logic, as SurveyJS adapts to container size
via CSS flexbox rules.
}
