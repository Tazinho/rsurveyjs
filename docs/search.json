[{"path":"https://tazinho.github.io/rsurveyjs/articles/advanced-js-hooks-and-events.html","id":"advanced-js-hooks-events","dir":"Articles","previous_headings":"","what":"Advanced JS Hooks & Events","title":"Advanced JS Hooks & Events","text":"Inject custom JavaScript extend SurveyJS far beyond R defaults. Validate, log, react user input powerful event hooks. Write body JavaScript function, string—see runnable examples . Tip: Always use just function body (function(...) {} wrapper), check browser’s JS console errors. survey building blocks theming, see vignettes.","code":""},{"path":"https://tazinho.github.io/rsurveyjs/articles/advanced-js-hooks-and-events.html","id":"table-of-contents","dir":"Articles","previous_headings":"Advanced JS Hooks & Events","what":"Table of Contents","title":"Advanced JS Hooks & Events","text":"JS Hooks? Pre-Render Hook Post-Render Hook Complete Hook Custom Event Listeners Debugging Tips Reference","code":""},{"path":"https://tazinho.github.io/rsurveyjs/articles/advanced-js-hooks-and-events.html","id":"what-are-js-hooks","dir":"Articles","previous_headings":"Advanced JS Hooks & Events","what":"What are JS Hooks?","title":"Advanced JS Hooks & Events","text":"Hooks let insert custom JavaScript key points survey lifecycle. Write just function body (string), full function() { ... }. Hooks run browser. Use console.log() debugging.","code":""},{"path":"https://tazinho.github.io/rsurveyjs/articles/advanced-js-hooks-and-events.html","id":"pre-render-hook","dir":"Articles","previous_headings":"Advanced JS Hooks & Events","what":"Pre-Render Hook","title":"Advanced JS Hooks & Events","text":"Runs survey displayed. Use custom validation, event listeners, setup logic.","code":""},{"path":"https://tazinho.github.io/rsurveyjs/articles/advanced-js-hooks-and-events.html","id":"example-enforce-minimum-nickname-length","dir":"Articles","previous_headings":"Advanced JS Hooks & Events > Pre-Render Hook","what":"Example: Enforce minimum nickname length","title":"Advanced JS Hooks & Events","text":"","code":"surveyjs(   schema = list(     title = \"Nickname Check\",     questions = list(       list(type = \"text\", name = \"nickname\", title = \"Enter a nickname\")     )   ),   pre_render_hook = \"     survey.onValidateQuestion.add(function(sender, options) {       if (options.name === 'nickname' && options.value.length < 4) {         options.error = 'Too short';       }     });   \" )"},{"path":"https://tazinho.github.io/rsurveyjs/articles/advanced-js-hooks-and-events.html","id":"post-render-hook","dir":"Articles","previous_headings":"Advanced JS Hooks & Events","what":"Post-Render Hook","title":"Advanced JS Hooks & Events","text":"Runs survey rendered. Use custom DOM tweaks, styling, logging.","code":""},{"path":"https://tazinho.github.io/rsurveyjs/articles/advanced-js-hooks-and-events.html","id":"example-add-a-custom-border","dir":"Articles","previous_headings":"Advanced JS Hooks & Events > Post-Render Hook","what":"Example: Add a custom border","title":"Advanced JS Hooks & Events","text":"","code":"surveyjs(   schema = list(     title = \"Styled Survey\",     questions = list(       list(type = \"text\", name = \"name\", title = \"Your name?\")     )   ),   post_render_hook = \"     el.style.border = '2px dashed #888';     console.log('Survey rendered:', el);   \" )"},{"path":"https://tazinho.github.io/rsurveyjs/articles/advanced-js-hooks-and-events.html","id":"complete-hook","dir":"Articles","previous_headings":"Advanced JS Hooks & Events","what":"Complete Hook","title":"Advanced JS Hooks & Events","text":"Runs survey completed user. Use trigger alerts, send data, fire custom analytics.","code":""},{"path":"https://tazinho.github.io/rsurveyjs/articles/advanced-js-hooks-and-events.html","id":"example-show-a-thank-you-alert","dir":"Articles","previous_headings":"Advanced JS Hooks & Events > Complete Hook","what":"Example: Show a thank-you alert","title":"Advanced JS Hooks & Events","text":"","code":"surveyjs(   schema = list(     title = \"Completion Alert\",     questions = list(       list(type = \"text\", name = \"email\", title = \"Your email?\")     )   ),   complete_hook = \"     alert('Thank you for completing the survey!');   \" )"},{"path":"https://tazinho.github.io/rsurveyjs/articles/advanced-js-hooks-and-events.html","id":"custom-event-listeners","dir":"Articles","previous_headings":"Advanced JS Hooks & Events","what":"Custom Event Listeners","title":"Advanced JS Hooks & Events","text":"Attach SurveyJS event pre-render hook.","code":""},{"path":"https://tazinho.github.io/rsurveyjs/articles/advanced-js-hooks-and-events.html","id":"example-log-every-value-change","dir":"Articles","previous_headings":"Advanced JS Hooks & Events > Custom Event Listeners","what":"Example: Log every value change","title":"Advanced JS Hooks & Events","text":"","code":"surveyjs(   schema = list(     title = \"Value Tracking\",     questions = list(       list(type = \"text\", name = \"email\", title = \"Your email?\")     )   ),   pre_render_hook = \"     survey.onValueChanged.add(function(sender, options) {       console.log('Field changed:', options.name, options.value);     });   \" )"},{"path":"https://tazinho.github.io/rsurveyjs/articles/advanced-js-hooks-and-events.html","id":"debugging-and-tips","dir":"Articles","previous_headings":"Advanced JS Hooks & Events","what":"Debugging and Tips","title":"Advanced JS Hooks & Events","text":"Write function body (function() { ... }). Use console.log() debugging browser’s JS console. JS code errors, check browser console details. See events: SurveyJS Events Reference.","code":""},{"path":"https://tazinho.github.io/rsurveyjs/articles/advanced-js-hooks-and-events.html","id":"further-reference","dir":"Articles","previous_headings":"Advanced JS Hooks & Events","what":"Further Reference","title":"Advanced JS Hooks & Events","text":"SurveyJS Events API See also: Survey Schema Recipes, Themes, Styling Localization","code":""},{"path":"https://tazinho.github.io/rsurveyjs/articles/shiny-and-database-integration.html","id":"shiny-and-database-integration","dir":"Articles","previous_headings":"","what":"Shiny and Database Integration","title":"Shiny and Database Integration","text":"Seamlessly embed SurveyJS forms Shiny apps. Capture, update, persist survey responses—including live editing database storage. custom JS hooks frontend logic, see Advanced JS Hooks & Events vignette.","code":""},{"path":"https://tazinho.github.io/rsurveyjs/articles/shiny-and-database-integration.html","id":"table-of-contents","dir":"Articles","previous_headings":"Shiny and Database Integration","what":"Table of Contents","title":"Shiny and Database Integration","text":"Minimal Shiny Survey App Live Mode: Real-Time Updates Dynamic Updates: Update Survey Server Saving Loading Responses Database Common Pitfalls & Reference","code":""},{"path":"https://tazinho.github.io/rsurveyjs/articles/shiny-and-database-integration.html","id":"minimal-shiny-survey-app","dir":"Articles","previous_headings":"Shiny and Database Integration","what":"Minimal Shiny Survey App","title":"Shiny and Database Integration","text":"","code":"library(shiny) library(rsurveyjs)  ui <- fluidPage(   surveyjsOutput(\"mysurvey\"),   verbatimTextOutput(\"result\") )  server <- function(input, output, session) {   output$mysurvey <- renderSurveyjs({     surveyjs(       schema = list(         title = \"Feedback\",         questions = list(           list(type = \"text\", name = \"name\", title = \"What is your name?\"),           list(type = \"rating\", name = \"rating\", title = \"How would you rate us?\")         )       )     )   })    output$result <- renderPrint({     input$mysurvey_data   }) }  shinyApp(ui, server)"},{"path":"https://tazinho.github.io/rsurveyjs/articles/shiny-and-database-integration.html","id":"live-mode-real-time-updates","dir":"Articles","previous_headings":"Shiny and Database Integration","what":"Live Mode: Real-Time Updates","title":"Shiny and Database Integration","text":"Use live = TRUE get continuous feedback user fills form. Use input$<id>_data_live live data. Use input$<id>_data final, completed responses.","code":"ui <- fluidPage(   surveyjsOutput(\"mysurvey\"),   verbatimTextOutput(\"live_output\") )  server <- function(input, output, session) {   output$mysurvey <- renderSurveyjs({     surveyjs(       schema = list(         title = \"Live Feedback\",         questions = list(           list(type = \"text\", name = \"comment\", title = \"Your comment?\")         )       ),       live = TRUE     )   })    output$live_output <- renderPrint({     input$mysurvey_data_live   }) }"},{"path":"https://tazinho.github.io/rsurveyjs/articles/shiny-and-database-integration.html","id":"dynamic-updates-update-survey-from-server","dir":"Articles","previous_headings":"Shiny and Database Integration","what":"Dynamic Updates: Update Survey from Server","title":"Shiny and Database Integration","text":"Use updateSurveyjs() change schema, initial data, theme, locale fly.","code":"ui <- fluidPage(   surveyjsOutput(\"mysurvey\"),   actionButton(\"reload\", \"Switch Survey\") )  server <- function(input, output, session) {   output$mysurvey <- renderSurveyjs({     surveyjs(       schema = list(         title = \"First Survey\",         questions = list(           list(type = \"text\", name = \"favorite\", title = \"Favorite color?\")         )       )     )   })    observeEvent(input$reload, {     updateSurveyjs(session, \"mysurvey\", schema = list(       title = \"New Survey\",       questions = list(         list(type = \"rating\", name = \"satisfaction\", title = \"Rate your satisfaction\")       )     ))   }) }"},{"path":"https://tazinho.github.io/rsurveyjs/articles/shiny-and-database-integration.html","id":"saving-and-loading-responses-with-a-database","dir":"Articles","previous_headings":"Shiny and Database Integration","what":"Saving and Loading Responses with a Database","title":"Shiny and Database Integration","text":"’s minimal example using DBI SQLite persistent storage. Replace \"responses.sqlite\" desired file path use another DBI-compatible backend. production, sanitize validate inputs appropriately.","code":"library(DBI) library(RSQLite) library(shiny) library(rsurveyjs)  # Set up database connection (for demo: use temp file) con <- dbConnect(RSQLite::SQLite(), \"responses.sqlite\") if (!dbExistsTable(con, \"survey_results\")) {   dbExecute(con, \"CREATE TABLE survey_results (     id INTEGER PRIMARY KEY AUTOINCREMENT,     timestamp TEXT,     name TEXT,     rating INTEGER   )\") }  ui <- fluidPage(   surveyjsOutput(\"mysurvey\"),   actionButton(\"save\", \"Save Response\"),   tableOutput(\"responses\") )  server <- function(input, output, session) {   output$mysurvey <- renderSurveyjs({     surveyjs(       schema = list(         title = \"Feedback\",         questions = list(           list(type = \"text\", name = \"name\", title = \"Your name?\"),           list(type = \"rating\", name = \"rating\", title = \"Rate us\")         )       )     )   })    observeEvent(input$save, {     dat <- input$mysurvey_data     if (!is.null(dat)) {       dbExecute(con, \"INSERT INTO survey_results (timestamp, name, rating) VALUES (?, ?, ?)\",         params = list(Sys.time(), dat$name, dat$rating)       )     }   })    output$responses <- renderTable({     dbGetQuery(con, \"SELECT * FROM survey_results ORDER BY id DESC\")   }) }  onStop(function() dbDisconnect(con)) shinyApp(ui, server)"},{"path":"https://tazinho.github.io/rsurveyjs/articles/shiny-and-database-integration.html","id":"common-pitfalls-further-reference","dir":"Articles","previous_headings":"Shiny and Database Integration","what":"Common Pitfalls & Further Reference","title":"Shiny and Database Integration","text":"input$mysurvey_data completed form data. input$mysurvey_data_live live-updating data (live = TRUE). Always check .null(input$mysurvey_data) saving. Ensure survey “Complete” button clicked trigger saving. See Advanced JS Hooks & Events react completion validation frontend. SurveyJS documentation DBI documentation RSQLite documentation","code":""},{"path":"https://tazinho.github.io/rsurveyjs/articles/survey-schema-recipes.html","id":"survey-schema-recipes","dir":"Articles","previous_headings":"","what":"Survey Schema Recipes","title":"Survey Schema Recipes","text":"Build survey R using power SurveyJS.vignette cookbook: copy, paste, adapt needed.","code":""},{"path":"https://tazinho.github.io/rsurveyjs/articles/survey-schema-recipes.html","id":"table-of-contents","dir":"Articles","previous_headings":"Survey Schema Recipes","what":"Table of Contents","title":"Survey Schema Recipes","text":"Single Question Types Multiple Choice & Matrix Layout: Pages, Panels, Dynamic Forms Advanced: Validation, Logic, Quizzes Initial Values & Read-Mode Calculated Fields Static Content: Images & HTML Reference Tip: Pass JSON-compatible list surveyjs() render survey. Tip: Results returned R Shiny app—see Shiny Integration vignette. Every example ready--run R code chunk. Use cookbook question types, validation, logic. See SurveyJS question types documentation full range.","code":""},{"path":[]},{"path":"https://tazinho.github.io/rsurveyjs/articles/survey-schema-recipes.html","id":"text-input","dir":"Articles","previous_headings":"Survey Schema Recipes > Single Question Types","what":"Text Input","title":"Survey Schema Recipes","text":"","code":"surveyjs(   schema = list(     title = \"Text Input\",     questions = list(       list(type = \"text\", name = \"name\", title = \"What is your name?\")     )   ) )"},{"path":"https://tazinho.github.io/rsurveyjs/articles/survey-schema-recipes.html","id":"comment-box","dir":"Articles","previous_headings":"Survey Schema Recipes > Single Question Types","what":"Comment Box","title":"Survey Schema Recipes","text":"","code":"surveyjs(   schema = list(     title = \"Comment\",     questions = list(       list(type = \"comment\", name = \"feedback\", title = \"Your feedback?\")     )   ) )"},{"path":"https://tazinho.github.io/rsurveyjs/articles/survey-schema-recipes.html","id":"rating","dir":"Articles","previous_headings":"Survey Schema Recipes > Single Question Types","what":"Rating","title":"Survey Schema Recipes","text":"","code":"surveyjs(   schema = list(     title = \"Rating\",     questions = list(       list(type = \"rating\", name = \"satisfaction\", title = \"How satisfied?\")     )   ) )"},{"path":"https://tazinho.github.io/rsurveyjs/articles/survey-schema-recipes.html","id":"dropdown","dir":"Articles","previous_headings":"Survey Schema Recipes > Single Question Types","what":"Dropdown","title":"Survey Schema Recipes","text":"","code":"surveyjs(   schema = list(     title = \"Dropdown\",     questions = list(       list(type = \"dropdown\", name = \"country\", title = \"Country?\", choices = list(\"USA\", \"Canada\", \"Other\"))     )   ) )"},{"path":"https://tazinho.github.io/rsurveyjs/articles/survey-schema-recipes.html","id":"checkbox","dir":"Articles","previous_headings":"Survey Schema Recipes > Single Question Types","what":"Checkbox","title":"Survey Schema Recipes","text":"","code":"surveyjs(   schema = list(     title = \"Checkbox\",     questions = list(       list(type = \"checkbox\", name = \"fruits\", title = \"Pick fruits\", choices = list(\"Apple\", \"Banana\", \"Cherry\"))     )   ) )"},{"path":"https://tazinho.github.io/rsurveyjs/articles/survey-schema-recipes.html","id":"radio-group","dir":"Articles","previous_headings":"Survey Schema Recipes > Single Question Types","what":"Radio Group","title":"Survey Schema Recipes","text":"","code":"surveyjs(   schema = list(     title = \"Radio Group\",     questions = list(       list(type = \"radiogroup\", name = \"gender\", title = \"Gender\", choices = list(\"Female\", \"Male\", \"Other\"))     )   ) )"},{"path":"https://tazinho.github.io/rsurveyjs/articles/survey-schema-recipes.html","id":"boolean-toggle","dir":"Articles","previous_headings":"Survey Schema Recipes > Single Question Types","what":"Boolean Toggle","title":"Survey Schema Recipes","text":"","code":"surveyjs(   schema = list(     title = \"Boolean\",     questions = list(       list(type = \"boolean\", name = \"agree\", title = \"Do you agree?\")     )   ) )"},{"path":[]},{"path":"https://tazinho.github.io/rsurveyjs/articles/survey-schema-recipes.html","id":"matrix-tabular-input","dir":"Articles","previous_headings":"Survey Schema Recipes > Multiple Choice & Matrix","what":"Matrix (Tabular Input)","title":"Survey Schema Recipes","text":"","code":"surveyjs(   schema = list(     title = \"Satisfaction Matrix\",     questions = list(       list(         type = \"matrix\",         name = \"satisfaction\",         title = \"How satisfied are you with...\",         rows = list(\"Quality\", \"Speed\"),         columns = list(\"Bad\", \"Okay\", \"Good\")       )     )   ) )"},{"path":"https://tazinho.github.io/rsurveyjs/articles/survey-schema-recipes.html","id":"matrix-dropdown","dir":"Articles","previous_headings":"Survey Schema Recipes > Multiple Choice & Matrix","what":"Matrix Dropdown","title":"Survey Schema Recipes","text":"","code":"surveyjs(   schema = list(     title = \"Matrix Dropdown\",     questions = list(       list(         type = \"matrixdropdown\",         name = \"skills\",         title = \"Skill evaluation\",         columns = list(           list(name = \"experience\", title = \"Years\", cellType = \"dropdown\", choices = 0:5)         ),         rows = list(           list(value = \"r\", text = \"R\"),           list(value = \"python\", text = \"Python\")         )       )     )   ) )"},{"path":[]},{"path":"https://tazinho.github.io/rsurveyjs/articles/survey-schema-recipes.html","id":"multi-page-survey","dir":"Articles","previous_headings":"Survey Schema Recipes > Layout: Pages, Panels, Dynamic Forms","what":"Multi-Page Survey","title":"Survey Schema Recipes","text":"","code":"surveyjs(   schema = list(     title = \"Multi-page Survey\",     pages = list(       list(name = \"page1\", elements = list(         list(type = \"text\", name = \"first\", title = \"First Name\")       )),       list(name = \"page2\", elements = list(         list(type = \"text\", name = \"last\", title = \"Last Name\")       ))     )   ) )"},{"path":"https://tazinho.github.io/rsurveyjs/articles/survey-schema-recipes.html","id":"panels-grouping-questions","dir":"Articles","previous_headings":"Survey Schema Recipes > Layout: Pages, Panels, Dynamic Forms","what":"Panels (Grouping Questions)","title":"Survey Schema Recipes","text":"","code":"surveyjs(   schema = list(     title = \"Panel Example\",     questions = list(       list(         type = \"panel\",         name = \"personal_info\",         title = \"Personal Information\",         elements = list(           list(type = \"text\", name = \"email\", title = \"Email\"),           list(type = \"text\", name = \"phone\", title = \"Phone\")         )       )     )   ) )"},{"path":"https://tazinho.github.io/rsurveyjs/articles/survey-schema-recipes.html","id":"dynamic-panel","dir":"Articles","previous_headings":"Survey Schema Recipes > Layout: Pages, Panels, Dynamic Forms","what":"Dynamic Panel","title":"Survey Schema Recipes","text":"","code":"surveyjs(   schema = list(     title = \"Work History\",     questions = list(       list(         type = \"paneldynamic\",         name = \"jobs\",         title = \"Previous Jobs\",         templateElements = list(           list(type = \"text\", name = \"employer\", title = \"Employer\"),           list(type = \"text\", name = \"role\", title = \"Role\")         ),         panelCount = 1       )     )   ) )"},{"path":[]},{"path":"https://tazinho.github.io/rsurveyjs/articles/survey-schema-recipes.html","id":"required-and-validated-input","dir":"Articles","previous_headings":"Survey Schema Recipes > Advanced: Validation, Logic, Quizzes","what":"Required and Validated Input","title":"Survey Schema Recipes","text":"","code":"surveyjs(   schema = list(     title = \"Validation Example\",     questions = list(       list(         type = \"text\", name = \"email\", title = \"Email\",         isRequired = TRUE,         validators = list(list(type = \"email\"))       )     )   ) )"},{"path":"https://tazinho.github.io/rsurveyjs/articles/survey-schema-recipes.html","id":"regex-validation","dir":"Articles","previous_headings":"Survey Schema Recipes > Advanced: Validation, Logic, Quizzes","what":"Regex Validation","title":"Survey Schema Recipes","text":"","code":"surveyjs(   schema = list(     title = \"Regex Validation\",     questions = list(       list(         type = \"text\", name = \"code\", title = \"Code\",         validators = list(list(type = \"regex\", regex = \"^[A-Z]{3}-\\\\d{3}$\", text = \"Format: AAA-999\"))       )     )   ) )"},{"path":"https://tazinho.github.io/rsurveyjs/articles/survey-schema-recipes.html","id":"conditional-questions","dir":"Articles","previous_headings":"Survey Schema Recipes > Advanced: Validation, Logic, Quizzes","what":"Conditional Questions","title":"Survey Schema Recipes","text":"","code":"surveyjs(   schema = list(     title = \"Conditional Example\",     questions = list(       list(type = \"radiogroup\", name = \"happy\", title = \"Are you happy?\", choices = list(\"Yes\", \"No\")),       list(type = \"comment\", name = \"whyNot\", title = \"Why not?\", visibleIf = \"{happy} = 'No'\")     )   ) )"},{"path":"https://tazinho.github.io/rsurveyjs/articles/survey-schema-recipes.html","id":"quiz","dir":"Articles","previous_headings":"Survey Schema Recipes > Advanced: Validation, Logic, Quizzes","what":"Quiz","title":"Survey Schema Recipes","text":"","code":"surveyjs(   schema = list(     title = \"Quiz\",     pages = list(       list(elements = list(         list(           type = \"radiogroup\", name = \"capital\", title = \"Capital of France?\",           choices = c(\"Berlin\", \"Paris\", \"Madrid\"), correctAnswer = \"Paris\"         )       ))     ),     showProgressBar = \"top\",     showCorrectAnswers = \"true\",     completedHtml = \"<h4>You scored {correctAnswers} out of {questionCount}.<\/h4>\"   ) )"},{"path":[]},{"path":"https://tazinho.github.io/rsurveyjs/articles/survey-schema-recipes.html","id":"pre-fill-answers","dir":"Articles","previous_headings":"Survey Schema Recipes > Initial Values & Read-only Mode","what":"Pre-fill Answers","title":"Survey Schema Recipes","text":"","code":"surveyjs(   schema = list(     title = \"Pre-filled Survey\",     questions = list(       list(type = \"text\", name = \"name\", title = \"Name\"),       list(type = \"rating\", name = \"rating\", title = \"Rating\")     )   ),   data = list(name = \"Taz\", rating = 5) )"},{"path":"https://tazinho.github.io/rsurveyjs/articles/survey-schema-recipes.html","id":"read-only-preview","dir":"Articles","previous_headings":"Survey Schema Recipes > Initial Values & Read-only Mode","what":"Read-only Preview","title":"Survey Schema Recipes","text":"","code":"surveyjs(   schema = list(     title = \"Read-only Preview\",     questions = list(       list(type = \"text\", name = \"name\", title = \"Name\"),       list(type = \"rating\", name = \"rating\", title = \"Rating\")     )   ),   data = list(name = \"Taz\", rating = 5),   read_only = TRUE )"},{"path":"https://tazinho.github.io/rsurveyjs/articles/survey-schema-recipes.html","id":"calculated-fields","dir":"Articles","previous_headings":"Survey Schema Recipes","what":"Calculated Fields","title":"Survey Schema Recipes","text":"","code":"surveyjs(   schema = list(     title = \"Sum Example\",     questions = list(       list(type = \"text\", name = \"a\", title = \"Enter a\"),       list(type = \"text\", name = \"b\", title = \"Enter b\"),       list(type = \"expression\", name = \"sum\", title = \"Sum\", expression = \"{a} + {b}\")     )   ) )"},{"path":[]},{"path":"https://tazinho.github.io/rsurveyjs/articles/survey-schema-recipes.html","id":"html-block","dir":"Articles","previous_headings":"Survey Schema Recipes > Static Content: Images & HTML","what":"HTML Block","title":"Survey Schema Recipes","text":"","code":"surveyjs(   schema = list(     title = \"HTML Example\",     questions = list(       list(type = \"html\", name = \"intro\", html = \"<b>Welcome to the survey!<\/b>\")     )   ) )"},{"path":"https://tazinho.github.io/rsurveyjs/articles/survey-schema-recipes.html","id":"image","dir":"Articles","previous_headings":"Survey Schema Recipes > Static Content: Images & HTML","what":"Image","title":"Survey Schema Recipes","text":"","code":"surveyjs(   schema = list(     title = \"Image Example\",     questions = list(       list(type = \"image\", name = \"logo\", imageLink = \"https://via.placeholder.com/300x100\")     )   ) )"},{"path":"https://tazinho.github.io/rsurveyjs/articles/survey-schema-recipes.html","id":"further-reference","dir":"Articles","previous_headings":"Survey Schema Recipes","what":"Further Reference","title":"Survey Schema Recipes","text":"See Themes, Styling Localization vignette design tweaks. SurveyJS Full Schema Reference SurveyJS Question Types","code":""},{"path":"https://tazinho.github.io/rsurveyjs/articles/themes-styling-and-localization.html","id":"themes-styling-and-localization","dir":"Articles","previous_headings":"","what":"Themes, Styling and Localization","title":"Themes, Styling and Localization","text":"Change look feel survey built-custom themes. Tweak colors, fonts, layout using CSS variables—R. Instantly translate survey UI audience. full schema question options, see [Survey Schema Recipes]. Tip: Can’t see theme? Run surveyjs_themes() check spelling!","code":""},{"path":"https://tazinho.github.io/rsurveyjs/articles/themes-styling-and-localization.html","id":"table-of-contents","dir":"Articles","previous_headings":"Themes, Styling and Localization","what":"Table of Contents","title":"Themes, Styling and Localization","text":"Themes: Built-Styles Custom Styling CSS Variables List Available Themes Localization: Changing Survey Language Reference","code":""},{"path":"https://tazinho.github.io/rsurveyjs/articles/themes-styling-and-localization.html","id":"themes-built-in-styles","dir":"Articles","previous_headings":"Themes, Styling and Localization","what":"Themes: Built-in Styles","title":"Themes, Styling and Localization","text":"SurveyJS offers variety built-themes match modern UI patterns. Themes well documented Themes & Styles original surveyjs documentation. General speaking every theme comes light/dark version panel/panelless variant. convenience available themes referenced surveyjs_themes() within rsurveyjs.","code":""},{"path":"https://tazinho.github.io/rsurveyjs/articles/themes-styling-and-localization.html","id":"using-a-built-in-theme","dir":"Articles","previous_headings":"Themes, Styling and Localization > Themes: Built-in Styles","what":"Using a built-in theme","title":"Themes, Styling and Localization","text":"Try \"defaultV2\", \"ThreeDimensionalLightPanelless\", \"contrast-dark\", \"flat-light\", etc. Custom Styling CSS Variables can override CSS variables change colors, corners, fonts, .","code":"surveyjs(   schema = list(     title = \"Modern Theme Example\",     questions = list(       list(type = \"text\", name = \"name\", title = \"Your name?\"),       list(type = \"rating\", name = \"rating\", title = \"How was your experience?\")     )   ),   theme = \"modern\" )"},{"path":"https://tazinho.github.io/rsurveyjs/articles/themes-styling-and-localization.html","id":"example-custom-brand-colors","dir":"Articles","previous_headings":"Themes, Styling and Localization > Themes: Built-in Styles","what":"Example: Custom brand colors","title":"Themes, Styling and Localization","text":"can set CSS variable supported SurveyJS. full list, see [SurveyJS theme variable docs].","code":"surveyjs(   schema = list(     title = \"Custom Theme Colors\",     questions = list(       list(type = \"text\", name = \"team\", title = \"Your favorite team?\")     )   ),   theme = \"DefaultLightPanelless\",   theme_vars = list(     \"--sjs-primary-backcolor\" = \"#0072B2\",       # Custom blue     \"--sjs-primary-forecolor\" = \"#ffffff\",       # White text     \"--sjs-corner-radius\" = \"14px\",              # More rounded corners     \"--sjs-shadow-medium\" = \"0 4px 12px rgba(0,0,0,0.2)\" # Softer shadow   ) )"},{"path":"https://tazinho.github.io/rsurveyjs/articles/themes-styling-and-localization.html","id":"list-available-themes","dir":"Articles","previous_headings":"Themes, Styling and Localization","what":"List Available Themes","title":"Themes, Styling and Localization","text":"can list available themes rsurveyjs :","code":"surveyjs_themes() #>  [1] \"BorderlessDark\"                  \"BorderlessDarkPanelless\"         #>  [3] \"BorderlessLight\"                 \"BorderlessLightPanelless\"        #>  [5] \"ContrastDark\"                    \"ContrastDarkPanelless\"           #>  [7] \"ContrastLight\"                   \"ContrastLightPanelless\"          #>  [9] \"DefaultDark\"                     \"DefaultDarkPanelless\"            #> [11] \"DefaultLight\"                    \"DefaultLightPanelless\"           #> [13] \"DoubleBorderDark\"                \"DoubleBorderDarkPanelless\"       #> [15] \"DoubleBorderLight\"               \"DoubleBorderLightPanelless\"      #> [17] \"FlatDark\"                        \"FlatDarkPanelless\"               #> [19] \"FlatLight\"                       \"FlatLightPanelless\"              #> [21] \"LayeredDark\"                     \"LayeredDarkPanelless\"            #> [23] \"LayeredLight\"                    \"LayeredLightPanelless\"           #> [25] \"PlainDark\"                       \"PlainDarkPanelless\"              #> [27] \"PlainLight\"                      \"PlainLightPanelless\"             #> [29] \"SharpDark\"                       \"SharpDarkPanelless\"              #> [31] \"SharpLight\"                      \"SharpLightPanelless\"             #> [33] \"SolidDark\"                       \"SolidDarkPanelless\"              #> [35] \"SolidLight\"                      \"SolidLightPanelless\"             #> [37] \"ThreeDimensionalDark\"            \"ThreeDimensionalDarkPanelless\"   #> [39] \"ThreeDimensionalLight\"           \"ThreeDimensionalLightPanelless\"  #> [41] \"__surveyjs_internal_themes_hash\" \"default\""},{"path":"https://tazinho.github.io/rsurveyjs/articles/themes-styling-and-localization.html","id":"localization-changing-survey-language","dir":"Articles","previous_headings":"Themes, Styling and Localization","what":"Localization: Changing Survey Language","title":"Themes, Styling and Localization","text":"Easily switch language survey UI international audiences. (Note: technical key-words like “Complete” etc. get properly translated via locale argument.) want , see multi-locale support section .","code":""},{"path":"https://tazinho.github.io/rsurveyjs/articles/themes-styling-and-localization.html","id":"example-german-language","dir":"Articles","previous_headings":"Themes, Styling and Localization > Localization: Changing Survey Language","what":"Example: German language","title":"Themes, Styling and Localization","text":"","code":"surveyjs(   schema = list(     title = \"Umfrage\",     questions = list(       list(type = \"rating\", name = \"zufriedenheit\", title = \"Wie zufrieden sind Sie?\")     )   ),   locale = \"de\" )"},{"path":"https://tazinho.github.io/rsurveyjs/articles/themes-styling-and-localization.html","id":"supported-languages","dir":"Articles","previous_headings":"Themes, Styling and Localization > Localization: Changing Survey Language","what":"Supported Languages","title":"Themes, Styling and Localization","text":"SurveyJS supports many locales: \"en\", \"de\", \"fr\", \"es\", \"pt\", \"ru\", . See SurveyJS localization docs full list.","code":""},{"path":"https://tazinho.github.io/rsurveyjs/articles/themes-styling-and-localization.html","id":"multi-locale-support","dir":"Articles","previous_headings":"Themes, Styling and Localization > Localization: Changing Survey Language","what":"Multi-locale support","title":"Themes, Styling and Localization","text":"","code":"surveyjs(   schema = list(     title = list(       en = \"Satisfaction Survey\",       fr = \"Enquête de satisfaction\"     ),     questions = list(       list(         type = \"rating\",         name = \"satisfaction\",         title = list(           en = \"How satisfied are you?\",           fr = \"Êtes-vous satisfait ?\"         )       ),       list(         type = \"comment\",         name = \"comments\",         title = list(           en = \"Additional comments\",           fr = \"Commentaires supplémentaires\"         )       )     )   ),   locale = \"fr\"   # Try \"en\" or \"fr\" )"},{"path":"https://tazinho.github.io/rsurveyjs/articles/themes-styling-and-localization.html","id":"further-reference","dir":"Articles","previous_headings":"Themes, Styling and Localization","what":"Further Reference","title":"Themes, Styling and Localization","text":"SurveyJS: Manage default themes styles SurveyJS: Localization See also: Survey Schema Recipes","code":""},{"path":"https://tazinho.github.io/rsurveyjs/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Malte Grosser. Author, maintainer.","code":""},{"path":"https://tazinho.github.io/rsurveyjs/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Grosser M (2025). rsurveyjs: SurveyJS Htmlwidget Shiny Bindings. R package version 0.1.0, https://tazinho.github.io/rsurveyjs.","code":"@Manual{,   title = {rsurveyjs: SurveyJS Htmlwidget and Shiny Bindings},   author = {Malte Grosser},   year = {2025},   note = {R package version 0.1.0},   url = {https://tazinho.github.io/rsurveyjs}, }"},{"path":"https://tazinho.github.io/rsurveyjs/index.html","id":"rsurveyjs","dir":"","previous_headings":"","what":"SurveyJS Htmlwidget and Shiny Bindings","title":"SurveyJS Htmlwidget and Shiny Bindings","text":"Modern forms & surveys R Shiny, powered SurveyJS v2.x. Build fully interactive forms, quizzes, data entry apps R—using SurveyJS’s rich features, themes, multilingual support.Ready everything simple feedback research-grade forms. 🌐 See rsurveyjs App Gallery →","code":""},{"path":"https://tazinho.github.io/rsurveyjs/index.html","id":"rocket-installation","dir":"","previous_headings":"","what":"🚀 Installation","title":"SurveyJS Htmlwidget and Shiny Bindings","text":"","code":"remotes::install_github(\"Tazinho/rsurveyjs\") # (CRAN release coming soon)"},{"path":"https://tazinho.github.io/rsurveyjs/index.html","id":"sparkles-core-features","dir":"","previous_headings":"","what":"✨ Core Features","title":"SurveyJS Htmlwidget and Shiny Bindings","text":"Render SurveyJS survey R lists—manual JSON needed Built-& custom themes CSS variables; multilingual UI box Capture complete live-updating survey responses Dynamically update forms, pre-fill data, localize runtime Power users: inject JavaScript validation, custom logic, events","code":""},{"path":"https://tazinho.github.io/rsurveyjs/index.html","id":"books-learn-by-example-copy-paste-vignettes","dir":"","previous_headings":"","what":"📚 Learn by Example: Copy-Paste Vignettes","title":"SurveyJS Htmlwidget and Shiny Bindings","text":"Survey Schema RecipesAll core question types, logic, validation—copy, adapt, build fast. Themes, Styling LocalizationMake beautiful accessible audience. Advanced JS Hooks & EventsAdd custom validation, interactivity, logic JavaScript hooks. Shiny Database IntegrationSave responses, restore sessions, work databases production apps. See vignettes docs site.","code":""},{"path":"https://tazinho.github.io/rsurveyjs/index.html","id":"wrench-minimal-example","dir":"","previous_headings":"","what":"🔧 Minimal Example","title":"SurveyJS Htmlwidget and Shiny Bindings","text":"See : vignette(“survey-schema-recipes”)","code":"library(rsurveyjs)  surveyjs(   schema = list(     title = \"Feedback\",     questions = list(       list(type = \"rating\", name = \"satisfaction\", title = \"How satisfied are you?\"),       list(type = \"text\", name = \"comment\", title = \"Any comments?\")     )   ),   theme = \"modern\",   theme_vars = list(\"--sjs-primary-backcolor\" = \"#39f\"),   locale = \"en\",   live = TRUE )"},{"path":"https://tazinho.github.io/rsurveyjs/index.html","id":"test_tube-shiny-integration-quick-reference","dir":"","previous_headings":"","what":"🧪 Shiny Integration Quick Reference","title":"SurveyJS Htmlwidget and Shiny Bindings","text":"See Shiny Database Integration advanced use.","code":""},{"path":"https://tazinho.github.io/rsurveyjs/index.html","id":"vertical_traffic_light-design-philosophy--limitations","dir":"","previous_headings":"","what":"🚦 Design Philosophy & Limitations","title":"SurveyJS Htmlwidget and Shiny Bindings","text":"Schema validation error handling performed browser SurveyJS . Official support registering new question types R included. Power users can inject JavaScript via pre_render_hook related arguments. See Advanced JS Hooks & Events vignette. included, see vignettes SurveyJS docs guidance alternatives. Advanced: Custom JavaScript Custom Widgets rsurveyjs allows inject JavaScript code via pre_render_hook, post_render_hook, complete_hook. Advanced users can use hooks register SurveyJS custom widgets plugins, add event listeners, extend survey logic—provided familiar SurveyJS JavaScript API. Note: currently high-level R API defining registering new question types R code alone. Custom widget support available power users , via JavaScript hooks. real-world JS examples, see Advanced JS Hooks & Events vignette.","code":""},{"path":[]},{"path":"https://tazinho.github.io/rsurveyjs/index.html","id":"open_book-further-reference","dir":"","previous_headings":"","what":"📖 Further Reference","title":"SurveyJS Htmlwidget and Shiny Bindings","text":"SurveyJS Documentation Themes & Styling rsurveyjs Vignettes & Gallery","code":""},{"path":"https://tazinho.github.io/rsurveyjs/index.html","id":"hammer_and_wrench-contributing","dir":"","previous_headings":"","what":"🛠️ Contributing","title":"SurveyJS Htmlwidget and Shiny Bindings","text":"Feedback, bug reports, pull requests welcome!File issue contribute via PR.","code":""},{"path":"https://tazinho.github.io/rsurveyjs/index.html","id":"identification_card-license","dir":"","previous_headings":"","what":"🪪 License","title":"SurveyJS Htmlwidget and Shiny Bindings","text":"SurveyJS Form Library rsurveyjs MIT licensed. Note: SurveyJS Creator/Designer included due licensing.","code":""},{"path":"https://tazinho.github.io/rsurveyjs/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 Malte Grosser Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://tazinho.github.io/rsurveyjs/reference/surveyjs-shiny.html","id":null,"dir":"Reference","previous_headings":"","what":"Shiny bindings for the SurveyJS widget — surveyjs-shiny","title":"Shiny bindings for the SurveyJS widget — surveyjs-shiny","text":"Shiny bindings SurveyJS widget","code":""},{"path":"https://tazinho.github.io/rsurveyjs/reference/surveyjs-shiny.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shiny bindings for the SurveyJS widget — surveyjs-shiny","text":"","code":"surveyjsOutput(outputId, width = \"100%\", height = \"400px\")  renderSurveyjs(expr, env = parent.frame(), quoted = FALSE)"},{"path":"https://tazinho.github.io/rsurveyjs/reference/surveyjs-shiny.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shiny bindings for the SurveyJS widget — surveyjs-shiny","text":"outputId Output variable read . width, height Size output container (CSS unit number). expr expression generates surveyjs widget. env environment evaluate expr. quoted expr quoted expression? (quote().)","code":""},{"path":"https://tazinho.github.io/rsurveyjs/reference/surveyjs.html","id":null,"dir":"Reference","previous_headings":"","what":"SurveyJS widget for Shiny with support for JavaScript hooks — surveyjs","title":"SurveyJS widget for Shiny with support for JavaScript hooks — surveyjs","text":"Render SurveyJS form JSON schema.","code":""},{"path":"https://tazinho.github.io/rsurveyjs/reference/surveyjs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SurveyJS widget for Shiny with support for JavaScript hooks — surveyjs","text":"","code":"surveyjs(   schema,   data = NULL,   read_only = FALSE,   live = FALSE,   theme = \"DefaultLight\",   theme_vars = NULL,   locale = NULL,   pre_render_hook = NULL,   post_render_hook = NULL,   complete_hook = NULL,   width = NULL,   height = NULL,   element_id = NULL )"},{"path":"https://tazinho.github.io/rsurveyjs/reference/surveyjs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SurveyJS widget for Shiny with support for JavaScript hooks — surveyjs","text":"schema List JSON string; must follow SurveyJS JSON Schema. data Initial values. read_only Render read-mode. live Live update responses? theme Theme name. theme_vars Named list CSS variables (e.g. --sjs-primary-backcolor). locale Language code (e.g. \"en\", \"de\") pre_render_hook JavaScript code (string) run rendering survey. Supply body JavaScript function — wrap function(...) {}. post_render_hook JavaScript code (string) run survey rendered. Also supply body JavaScript function — full function(...) {} wrapper. complete_hook JavaScript function body run survey completion width, height Optional CSS size number. element_id Optional element ID. Leave NULL Shiny (auto-assigned).","code":""},{"path":"https://tazinho.github.io/rsurveyjs/reference/surveyjs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"SurveyJS widget for Shiny with support for JavaScript hooks — surveyjs","text":"widget renders fully customizable survey using SurveyJS v2 inside Shiny app. supports themes, read-mode, initial values, localization, real-time updates. Final answers delivered input[[paste0(id, \"_data\")]] user clicks Complete. live = TRUE, updates delivered input[[paste0(id, \"_data_live\")]] input. SurveyJS widget responsive default. resize() method placeholder implement manual resizing logic, SurveyJS adapts container size via CSS flexbox rules.","code":""},{"path":"https://tazinho.github.io/rsurveyjs/reference/surveyjs_schema.html","id":null,"dir":"Reference","previous_headings":"","what":"SurveyJS JSON Schema Documentation — surveyjs_schema","title":"SurveyJS JSON Schema Documentation — surveyjs_schema","text":"SurveyJS surveys defined JSON. function links official documentation describing supported question types, structure, logic options.","code":""},{"path":"https://tazinho.github.io/rsurveyjs/reference/surveyjs_schema.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SurveyJS JSON Schema Documentation — surveyjs_schema","text":"","code":"surveyjs_schema()"},{"path":"https://tazinho.github.io/rsurveyjs/reference/surveyjs_schema.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"SurveyJS JSON Schema Documentation — surveyjs_schema","text":"Invisibly returns URL SurveyJS schema docs.","code":""},{"path":"https://tazinho.github.io/rsurveyjs/reference/surveyjs_schema.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"SurveyJS JSON Schema Documentation — surveyjs_schema","text":"","code":"if (interactive()) utils::browseURL(surveyjs_schema())"},{"path":"https://tazinho.github.io/rsurveyjs/reference/surveyjs_themes.html","id":null,"dir":"Reference","previous_headings":"","what":"Available SurveyJS Themes — surveyjs_themes","title":"Available SurveyJS Themes — surveyjs_themes","text":"Common built-themes use theme argument surveyjs() documented surveyjs - Themes & Styles every theme comes light & dark version without panels.","code":""},{"path":"https://tazinho.github.io/rsurveyjs/reference/surveyjs_themes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Available SurveyJS Themes — surveyjs_themes","text":"","code":"surveyjs_themes()"},{"path":"https://tazinho.github.io/rsurveyjs/reference/surveyjs_themes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Available SurveyJS Themes — surveyjs_themes","text":"character vector theme names.","code":""},{"path":"https://tazinho.github.io/rsurveyjs/reference/surveyjs_themes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Available SurveyJS Themes — surveyjs_themes","text":"","code":"surveyjs_themes() #>  [1] \"BorderlessDark\"                  \"BorderlessDarkPanelless\"         #>  [3] \"BorderlessLight\"                 \"BorderlessLightPanelless\"        #>  [5] \"ContrastDark\"                    \"ContrastDarkPanelless\"           #>  [7] \"ContrastLight\"                   \"ContrastLightPanelless\"          #>  [9] \"DefaultDark\"                     \"DefaultDarkPanelless\"            #> [11] \"DefaultLight\"                    \"DefaultLightPanelless\"           #> [13] \"DoubleBorderDark\"                \"DoubleBorderDarkPanelless\"       #> [15] \"DoubleBorderLight\"               \"DoubleBorderLightPanelless\"      #> [17] \"FlatDark\"                        \"FlatDarkPanelless\"               #> [19] \"FlatLight\"                       \"FlatLightPanelless\"              #> [21] \"LayeredDark\"                     \"LayeredDarkPanelless\"            #> [23] \"LayeredLight\"                    \"LayeredLightPanelless\"           #> [25] \"PlainDark\"                       \"PlainDarkPanelless\"              #> [27] \"PlainLight\"                      \"PlainLightPanelless\"             #> [29] \"SharpDark\"                       \"SharpDarkPanelless\"              #> [31] \"SharpLight\"                      \"SharpLightPanelless\"             #> [33] \"SolidDark\"                       \"SolidDarkPanelless\"              #> [35] \"SolidLight\"                      \"SolidLightPanelless\"             #> [37] \"ThreeDimensionalDark\"            \"ThreeDimensionalDarkPanelless\"   #> [39] \"ThreeDimensionalLight\"           \"ThreeDimensionalLightPanelless\"  #> [41] \"__surveyjs_internal_themes_hash\" \"default\""},{"path":"https://tazinho.github.io/rsurveyjs/reference/updateSurveyjs.html","id":null,"dir":"Reference","previous_headings":"","what":"Dynamically update a surveyjs() widget from the server side — updateSurveyjs","title":"Dynamically update a surveyjs() widget from the server side — updateSurveyjs","text":"function sends message existing SurveyJS widget rendered UI, allowing update data, read-mode, theme, locale, schema dynamically server using Shiny.","code":""},{"path":"https://tazinho.github.io/rsurveyjs/reference/updateSurveyjs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dynamically update a surveyjs() widget from the server side — updateSurveyjs","text":"","code":"updateSurveyjs(   session,   id,   data = NULL,   read_only = NULL,   schema = NULL,   theme = NULL,   locale = NULL )"},{"path":"https://tazinho.github.io/rsurveyjs/reference/updateSurveyjs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dynamically update a surveyjs() widget from the server side — updateSurveyjs","text":"session Shiny session object. id Output ID used surveyjsOutput(). data Optional named list answers set. read_only Optional logical; toggle read-mode. schema Optional new schema (list JSON string). theme Optional theme name (e.g. \"modern\"). locale Optional locale code (e.g. \"en\", \"de\").","code":""},{"path":"https://tazinho.github.io/rsurveyjs/reference/updateSurveyjs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dynamically update a surveyjs() widget from the server side — updateSurveyjs","text":"","code":"if (FALSE) { # \\dontrun{ # Inside a Shiny app server function: updateSurveyjs(session, \"mysurvey\", data = list(q1 = \"Yes\")) } # }"},{"path":[]},{"path":"https://tazinho.github.io/rsurveyjs/news/index.html","id":"initial-release-0-1-0","dir":"Changelog","previous_headings":"","what":"Initial release","title":"rsurveyjs 0.1.0","text":"First release rsurveyjs: Minimal, powerful R bindings SurveyJS v2.x","code":""},{"path":"https://tazinho.github.io/rsurveyjs/news/index.html","id":"features-0-1-0","dir":"Changelog","previous_headings":"Initial release","what":"Features","title":"rsurveyjs 0.1.0","text":"Render SurveyJS surveys, forms, quizzes R using simple JSON-compatible lists Get completed responses via input$<id>_data Track live responses typing via input$<id>_data_live Dynamically update schema, data, theme, language server Choose built-SurveyJS themes Customize styles via CSS variables (theme_vars) Instantly localize UI locale argument, provide multi-locale schemas Inject custom JavaScript (validation, events, logic) via pre_render_hook, post_render_hook, complete_hook Listen SurveyJS event add custom behaviors Survey Schema Recipes: Copy-paste building blocks question types, logic, validation Themes, Styling Localization Advanced JS Hooks & Events Shiny Database Integration: Persistent survey storage database examples","code":""},{"path":"https://tazinho.github.io/rsurveyjs/news/index.html","id":"philosophy--limitations-0-1-0","dir":"Changelog","previous_headings":"Initial release","what":"Philosophy & Limitations","title":"rsurveyjs 0.1.0","text":"Keeps validation rendering JS (SurveyJS) side—R-side schema validation bundled visual designer SurveyJS Creator (see SurveyJS licensing features) Custom widgets/plugins officially supported, power users can inject JavaScript advanced cases Thank early testers SurveyJS team making world-class survey tooling available MIT!","code":""}]
