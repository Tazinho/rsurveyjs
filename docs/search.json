[{"path":"https://tazinho.github.io/rsurveyjs/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Malte Grosser. Author, maintainer.","code":""},{"path":"https://tazinho.github.io/rsurveyjs/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Grosser M (2025). rsurveyjs: SurveyJS Htmlwidget Shiny Bindings. R package version 0.1.0, https://github.com/tazinho/rsurveyjs.","code":"@Manual{,   title = {rsurveyjs: SurveyJS Htmlwidget and Shiny Bindings},   author = {Malte Grosser},   year = {2025},   note = {R package version 0.1.0},   url = {https://github.com/tazinho/rsurveyjs}, }"},{"path":"https://tazinho.github.io/rsurveyjs/index.html","id":"rsurveyjs","dir":"","previous_headings":"","what":"SurveyJS Htmlwidget and Shiny Bindings","title":"SurveyJS Htmlwidget and Shiny Bindings","text":"rsurveyjs R htmlwidget + Shiny bindings SurveyJS Form Library. renders SurveyJS survey JSON/list schema, returns final submission input$id_data, (optionally) emits live updates user types input$id_data_live. also supports programmatic updates server. SurveyJS runtime (v1.12.12) bundled MIT license ininst/htmlwidgets/lib/surveyjs/1.12.12/.","code":""},{"path":"https://tazinho.github.io/rsurveyjs/index.html","id":"installation-dev","dir":"","previous_headings":"","what":"Installation (dev)","title":"SurveyJS Htmlwidget and Shiny Bindings","text":"local checkout repo:","code":"# in the package root (where DESCRIPTION lives) devtools::install()   # or devtools::load_all() while developing"},{"path":"https://tazinho.github.io/rsurveyjs/index.html","id":"minimal-shiny-example","dir":"","previous_headings":"","what":"Minimal Shiny example","title":"SurveyJS Htmlwidget and Shiny Bindings","text":"","code":"library(shiny) library(rsurveyjs)  schema <- list(   title = \"Quick survey\",   pages = list(     list(elements = list(       list(type=\"text\",    name=\"title\",   title=\"Idea title\", isRequired=TRUE),       list(type=\"comment\", name=\"problem\", title=\"Problem statement\", isRequired=TRUE),       list(type=\"dropdown\",name=\"bu\",      title=\"Business unit\", isRequired=TRUE,            choices=c(\"Sales\",\"Operations\",\"HR\",\"Finance\",\"IT\",\"Other\"))     ))   ) )  ui <- fluidPage(   surveyjsOutput(\"s1\"),   h4(\"Final (after Complete):\"),   verbatimTextOutput(\"final\"),   h4(\"Live (while typing):\"),   verbatimTextOutput(\"live\") )  server <- function(input, output, session){   # live = TRUE enables _data_live updates while typing   output$s1 <- renderSurveyjs(surveyjs(schema, live = TRUE))    output$final <- renderPrint({ req(input$s1_data);      input$s1_data })   output$live  <- renderPrint({ req(input$s1_data_live); input$s1_data_live }) }  shinyApp(ui, server)"},{"path":"https://tazinho.github.io/rsurveyjs/index.html","id":"programmatic-updates-server--widget","dir":"","previous_headings":"","what":"Programmatic updates (server → widget)","title":"SurveyJS Htmlwidget and Shiny Bindings","text":"Use updateSurveyjs() toggle read-, prefill data, change locale/theme, swap schema.","code":"# Toggle read-only (example button) observeEvent(input$lock, {   updateSurveyjs(session, \"s1\", readOnly = TRUE) })  # Prefill some answers observeEvent(input$prefill, {   updateSurveyjs(session, \"s1\",                  data = list(title=\"Prefilled title\",                              problem=\"Some starter text...\",                              bu=\"IT\")) })  # Swap locale / theme (if desired) # updateSurveyjs(session, \"s1\", locale = \"de\", theme = \"defaultV2\")"},{"path":"https://tazinho.github.io/rsurveyjs/index.html","id":"example-app-included","dir":"","previous_headings":"","what":"Example app included","title":"SurveyJS Htmlwidget and Shiny Bindings","text":"slightly richer demo lives inst/examples/demo.R. Run :","code":"shiny::runApp(system.file(\"examples/demo\", package = \"rsurveyjs\"), launch.browser = TRUE)"},{"path":"https://tazinho.github.io/rsurveyjs/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"SurveyJS Htmlwidget and Shiny Bindings","text":"wrapper code MIT‑licensed. bundled SurveyJS runtime files remain MIT license (included alongside JS/CSS).","code":""},{"path":"https://tazinho.github.io/rsurveyjs/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 Malte Grosser Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://tazinho.github.io/rsurveyjs/reference/surveyjs-shiny.html","id":null,"dir":"Reference","previous_headings":"","what":"Shiny bindings for the SurveyJS widget — surveyjs-shiny","title":"Shiny bindings for the SurveyJS widget — surveyjs-shiny","text":"Shiny bindings SurveyJS widget","code":""},{"path":"https://tazinho.github.io/rsurveyjs/reference/surveyjs-shiny.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shiny bindings for the SurveyJS widget — surveyjs-shiny","text":"","code":"surveyjsOutput(outputId, width = \"100%\", height = \"400px\")  renderSurveyjs(expr, env = parent.frame(), quoted = FALSE)"},{"path":"https://tazinho.github.io/rsurveyjs/reference/surveyjs-shiny.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shiny bindings for the SurveyJS widget — surveyjs-shiny","text":"outputId Output variable read . width, height Size output container (CSS unit number). expr expression generates surveyjs widget. env environment evaluate expr. quoted expr quoted expression? (quote().)","code":""},{"path":"https://tazinho.github.io/rsurveyjs/reference/surveyjs.html","id":null,"dir":"Reference","previous_headings":"","what":"SurveyJS widget for Shiny — surveyjs","title":"SurveyJS widget for Shiny — surveyjs","text":"Render SurveyJS form JSON/list schema. Final answers delivered input[[paste0(id, \"_data\")]] user clicks Complete. live = TRUE, live updates typing delivered input[[paste0(id, \"_data_live\")]].","code":""},{"path":"https://tazinho.github.io/rsurveyjs/reference/surveyjs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SurveyJS widget for Shiny — surveyjs","text":"","code":"surveyjs(   schema,   data = NULL,   readOnly = FALSE,   live = TRUE,   theme = \"defaultV2\",   locale = \"en\",   width = NULL,   height = NULL,   elementId = NULL )"},{"path":"https://tazinho.github.io/rsurveyjs/reference/surveyjs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SurveyJS widget for Shiny — surveyjs","text":"schema List JSON string; SurveyJS survey JSON. data Optional named list initial answers. readOnly Logical; render read-mode. live Logical; send live updates typing? Default TRUE. theme SurveyJS theme name (e.g., \"defaultV2\" v1.x). locale Locale code (e.g., \"en\", \"de\"). width, height CSS size number widget container. elementId Optional element id.","code":""},{"path":"https://tazinho.github.io/rsurveyjs/reference/surveyjs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"SurveyJS widget for Shiny — surveyjs","text":"htmlwidget used Shiny UIs.","code":""},{"path":"https://tazinho.github.io/rsurveyjs/reference/updateSurveyjs.html","id":null,"dir":"Reference","previous_headings":"","what":"Update a SurveyJS widget on the client — updateSurveyjs","title":"Update a SurveyJS widget on the client — updateSurveyjs","text":"Update SurveyJS widget client","code":""},{"path":"https://tazinho.github.io/rsurveyjs/reference/updateSurveyjs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update a SurveyJS widget on the client — updateSurveyjs","text":"","code":"updateSurveyjs(   session,   id,   data = NULL,   readOnly = NULL,   schema = NULL,   theme = NULL,   locale = NULL )"},{"path":"https://tazinho.github.io/rsurveyjs/reference/updateSurveyjs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update a SurveyJS widget on the client — updateSurveyjs","text":"session Shiny session. id Output id used surveyjsOutput(). data Optional named list answers set. readOnly Optional logical; toggle read-mode. schema Optional new schema (list JSON string). theme Optional theme name. locale Optional locale code.","code":""},{"path":"https://tazinho.github.io/rsurveyjs/news/index.html","id":"rsurveyjs-010-2025-07-28","dir":"Changelog","previous_headings":"","what":"rsurveyjs 0.1.0 (2025-07-28)","title":"rsurveyjs 0.1.0 (2025-07-28)","text":"Initial release. Htmlwidget render SurveyJS forms (surveyjs()). Shiny bindings: final submission input$id_data, optional live updates input$id_data_live. Server update API: updateSurveyjs() prefill data, toggle read-, change theme/locale, replace schema. Works Shiny apps Quarto documents server: shiny. Bundled SurveyJS runtime (MIT) pinned v1.12.12.","code":""}]
